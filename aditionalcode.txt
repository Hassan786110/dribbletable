<table>
              <thead>
                <tr>
                  <th className="hospitalHeading">Hospitals</th>
                  <th>Category</th>
                  <th
                    onClick={() => {
                      setRegion(true);
                      setPerform(false);
                      setTotalYear(false);
                      setLastUpdate(false);
                      setGender(false);
                    }}
                    className="region"
                  >
                    {region ? (
                      <Popup heading="Region" click={setRegion} filter={filter}>
                        <ReactFlagsSelect
                          style={{ borderRadius: "20px" }}
                          selected={regionSelect}
                          onSelect={(code) => setRegionSelect(code)}
                        />
                      </Popup>
                    ) : (
                      <p>Region</p>
                    )}
                  </th>
                  <th
                    onClick={() => {
                      setPerform(true);
                      setRegion(false);
                      setTotalYear(false);
                      setLastUpdate(false);
                      setGender(false);
                    }}
                    className="perform"
                  >
                    {perform ? (
                      <Popup
                        heading="Perform"
                        click={setPerform}
                        filter={filter}
                      >
                        <select
                          name="perform"
                          value={performSelect}
                          onChange={(e) => {
                            setPerformSelect(e.target.value);
                          }}
                        >
                          {filterData.map((ele, ind) => {
                            if (!performArr.includes(ele.perform)) {
                              performArr.push(ele.perform);
                              return (
                                <option key={ind} value={ele.perform}>
                                  {ele.perform}
                                </option>
                              );
                            }
                          })}
                        </select>
                      </Popup>
                    ) : (
                      <p>Perform</p>
                    )}
                  </th>
                  <th
                    onClick={() => {
                      setTotalYear(true);
                      setPerform(false);
                      setRegion(false);
                      setLastUpdate(false);
                      setGender(false);
                    }}
                    className="total"
                  >
                    {totalYear ? (
                      <Popup
                        heading="Total/Year"
                        click={setTotalYear}
                        filter={filter}
                      >
                        <select
                          name="totalYear"
                          value={totalSelect}
                          onChange={(e) => setTotalSelect(e.target.value)}
                        >
                          <option value="1 - 5">1 - 5</option>
                          <option value="6 - 10">6 - 10</option>
                          <option value="11 - 15">11 - 15</option>
                          <option value="16 - 20">16 - 20</option>
                          <option value="20+">20+</option>
                        </select>
                      </Popup>
                    ) : (
                      <p>Total/Year</p>
                    )}
                  </th>
                  <th
                    onClick={() => {
                      setLastUpdate(true);
                      setPerform(false);
                      setTotalYear(false);
                      setRegion(false);
                      setGender(false);
                    }}
                    className="last"
                  >
                    {lastUpdate ? (
                      <Popup
                        heading="Last Update"
                        click={setLastUpdate}
                        filter={filter}
                      >
                        <select
                          name="lastUpdate"
                          value={lastSelect}
                          onChange={(e) => setLastSelect(e.target.value)}
                        >
                          {lastUpdateArr.map((ele, ind) => {
                            return (
                              <option value={ele} key={ind}>
                                {ele}
                              </option>
                            );
                          })}
                        </select>
                      </Popup>
                    ) : (
                      <p>Last Update</p>
                    )}
                  </th>
                  <th>Access</th>
                  <th>Goal</th>
                  <th>Subscribers</th>
                  <th>Live Peoples</th>
                  <th>Stats</th>
                  <th
                    onClick={() => {
                      setGender(true);
                      setPerform(false);
                      setTotalYear(false);
                      setLastUpdate(false);
                      setRegion(false);
                    }}
                    className="gender"
                  >
                    {gender ? (
                      <Popup heading="Gender" click={setGender} filter={filter}>
                        <section>
                          <TbGenderFemale
                            className="female"
                            onClick={() => {
                              setGenderSelect({
                                ...genderSelect,
                                gender: "female",
                              });
                            }}
                            style={{
                              color:
                                genderSelect.gender === "female"
                                  ? "#EF1378"
                                  : "#c2c3c3",
                            }}
                          />
                          <input
                            type="number"
                            value={genderSelect.min1}
                            placeholder="Min %"
                            onChange={(e) =>
                              setGenderSelect({
                                ...genderSelect,
                                min1: e.target.value,
                                min2: "",
                              })
                            }
                          />
                          <input
                            type="number"
                            value={genderSelect.max1}
                            placeholder="Max %"
                            onChange={(e) =>
                              setGenderSelect({
                                ...genderSelect,
                                max1: e.target.value,
                                max2: "",
                              })
                            }
                          />
                        </section>
                        <section>
                          <TbGenderMale
                            className="male"
                            onClick={() => {
                              setGenderSelect({
                                ...genderSelect,
                                gender: "male",
                              });
                            }}
                            style={{
                              color:
                                genderSelect.gender === "male"
                                  ? "#01A7E7"
                                  : "#c2c3c3",
                            }}
                          />
                          <input
                            type="number"
                            value={genderSelect.min2}
                            placeholder="Min %"
                            onChange={(e) =>
                              setGenderSelect({
                                ...genderSelect,
                                min2: e.target.value,
                                min1: "",
                              })
                            }
                          />
                          <input
                            type="number"
                            value={genderSelect.max2}
                            placeholder="Max %"
                            onChange={(e) =>
                              setGenderSelect({
                                ...genderSelect,
                                max2: e.target.value,
                                max1: "",
                              })
                            }
                          />
                        </section>
                      </Popup>
                    ) : (
                      <p>Gender</p>
                    )}
                  </th>
                  <th>Age</th>
                  <th>Country</th>
                  <th>Posts</th>
                  <th>Oxbat</th>
                  <th>EP</th>
                  <th>Source</th>
                </tr>
              </thead>
              <tbody>
                {data.map((ele, ind) => {
                  return (
                    <tr key={ind}>
                      <td className="hospital">{ele.name}</td>
                      <td>
                        {ele.category === "web" ? (
                          <FaGlobe className="category1" />
                        ) : (
                          <RiSettings5Fill className="category2" />
                        )}
                      </td>
                      <td className="country">
                        <img
                          src={`https://purecatamphetamine.github.io/country-flag-icons/3x2/${ele.region}.svg`}
                          alt="flag image"
                        />
                      </td>
                      <td>{ele.perform}</td>
                      <td>{ele.totalYear}</td>
                      <td>{ele.lastUpdate}</td>
                      <td>
                        {ele.access === "admin" ? (
                          <FaLock className="access1" />
                        ) : ele.access === "access" ? (
                          <FaLockOpen className="access2" />
                        ) : (
                          <FaLock className="access3" />
                        )}
                      </td>
                      <td>
                        <BsInfoCircleFill className="goal" />
                      </td>
                      <td>{ele.subscribers}</td>
                      <td className="livePeoples">
                        {ele.livePeoples[0] + ele.livePeoples[1]}
                        <span>{ele.livePeoples[2]}</span>
                      </td>
                      <td>{ele.stats}</td>
                      <td>
                        <Donutchart min={ele.gender[1]} max={ele.gender[2]} />
                      </td>
                      <td>
                        <RiBarChartFill className="age" />
                      </td>
                      <td className="country">
                        <img
                          src={`https://purecatamphetamine.github.io/country-flag-icons/3x2/${ele.country}.svg`}
                          alt="flag image"
                        />
                      </td>
                      <td>{ele.posts}</td>
                      <td>{ele.oxbat}</td>
                      <td>{ele.ep}</td>
                      <td>{ele.source}</td>
                      <td className="save" onClick={() => bookMark(ind)}>
                        {save.includes(ind) ? (
                          <BsBookmarkFill className="saveIcon2" />
                        ) : (
                          <BsBookmark className="saveIcon1" />
                        )}
                      </td>
                    </tr>
                  );
                })}
              </tbody>
            </table>